{"version":3,"sources":["../src/Vector.js","../src/Calc.js","../src/Canvas.js","../src/index.js","10.js"],"names":["Vector","x","y","_x","_y","vectorLimit","undefined","factor","factor2","limit","limit2","x2","y2","Math","atan2","Calc","n","min","max","random","z","x1","y1","hypot","angle","PI","r1","r2","abs","rect1","rect2","width","height","cX","cY","cR","rX","rY","rW","rH","distX","distY","dx","dy","floor","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInElastic","sin","easeOutElastic","easeInOutElastic","Canvas","config","bgColor","fps","hook","appendToBody","canvas","document","querySelector","ctx","getContext","canvasPosition","getBoundingClientRect","stop","c","createElement","appendElement","body","style","background","append","color","strokeWidth","strokeColor","shadow","rotate","fillStyle","strokeStyle","addShadow","translate","fillRect","setTransform","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","r","arc","stroekeWidth","fill","src","sx","sy","sWidth","sHeight","drawImage","offsetX","offsetY","blur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","fontSize","font","text","sizeFactor","textLength","center","measureText","fillText","time","clearRect","render","setTimeout","window","requestAnimationFrame","init","bind","Sprite","ms","image","pos","createVector","frameIndex","tickCount","ticksPerFrame","numberOfFrames","loop","createImage","Sprites","sprites","isLoaded","colors","addEventListener","e","mouseX","clientX","left","mouseY","clientY","top","Image","require","onload","createSprites","push","gradient","createLinearGradient","addColorStop","rect","createBg"],"mappings":"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","file":"10.f30abad6.js","sourceRoot":"../examples","sourcesContent":["export default class Vector {\n  constructor(x, y) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this.vectorLimit = undefined;\n  }\n\n  set x(x) {\n    this._x =\n      this.vectorLimit && x > this.vectorLimit.x ? this.vectorLimit.x : x;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  set y(y) {\n    this._y =\n      this.vectorLimit && y > this.vectorLimit.y ? this.vectorLimit.y : y;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  mult(factor, factor2 = undefined) {\n    this.x *= factor;\n    this.y *= factor2 || factor;\n  }\n\n  div(factor, factor2 = undefined) {\n    this.x /= factor;\n    this.y /= factor2 || factor;\n  }\n\n  add(factor, factor2 = undefined) {\n    this.x += factor;\n    this.y += factor2 || factor;\n  }\n\n  sub(factor, factor2 = undefined) {\n    this.x -= factor;\n    this.y -= factor2 || factor;\n  }\n\n  limit(limit, limit2 = undefined) {\n    this.vectorLimit = {\n      x: limit,\n      y: limit2 || limit\n    };\n\n    this.x = this.x > this.vectorLimit.x ? this.vectorLimit.x : this.x;\n    this.y = this.y > this.vectorLimit.y ? this.vectorLimit.y : this.y;\n  }\n\n  unLimit() {\n    this.vectorLimit = undefined;\n  }\n\n  heading(x2, y2) {\n    return Math.atan2(y2 - this.y, x2 - this.x);\n  }\n}\n","import Vector from './Vector'\n\nexport default class Calc {\n  constructor() { }\n\n  static constrain(n, min, max) {\n    return n < min ? min : n && n > max ? max : n;\n  }\n\n  static createVector(x, y) {\n    return new Vector(x, y);\n  }\n\n  static createRandomVector() {\n    const x = Math.random() > 0.5 ? Math.random() : -Math.random();\n    const y = Math.random() > 0.5 ? Math.random() : -Math.random();\n\n    return new Vector(x, y);\n  }\n\n  static create3DVector(x = 0, y = 0, z = 0) {\n    return { x, y, z }\n  }\n\n  static dist(x1, y1, x2, y2) {\n    return Math.hypot(x2 - x1, y2 - y1);\n  }\n\n  static heading(x1, y1, x2, y2) {\n    return Math.atan2(y2 - y1, x2 - x1);\n  }\n\n  static toDegrees(angle) {\n    return angle * (180 / Math.PI);\n  }\n\n  static toRadians(angle) {\n    return angle * (Math.PI / 180);\n  }\n\n  static invertAngle(angle) {\n    return (angle + Math.PI) % (2 * Math.PI);\n  }\n\n  static circlesCollide(x1, y1, r1, x2, y2, r2) {\n    return Math.abs((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)) < (r1 + r2) * (r1 + r2);\n  }\n\n  static rectangleCollide(rect1, rect2) {\n    return (rect1.x < rect2.x + rect2.width &&\n      rect1.x + rect1.width > rect2.x &&\n      rect1.y < rect2.y + rect2.height &&\n      rect1.y + rect1.height > rect2.y)\n  }\n\n  static circleRectangleCollide(cX, cY, cR, rX, rY, rW, rH) {\n    const distX = Math.abs(cX - rX - rW / 2);\n    const distY = Math.abs(cY - rY - rH / 2);\n\n    if (distX > (rW / 2 + cR)) { return false; }\n    if (distY > (rH / 2 + cR)) { return false; }\n\n    if (distX <= (rW / 2)) { return true; }\n    if (distY <= (rH / 2)) { return true; }\n\n    const dx = distX - rW / 2;\n    const dy = distY - rH / 2;\n    return (dx * dx + dy * dy <= (cR * cR));\n  }\n\n  static random(min = 0, max = 255) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  static easingFunctions() {\n    return {\n      // no easing, no acceleration\n      linear: function (t) { return t },\n      // accelerating from zero velocity\n      easeInQuad: function (t) { return t * t },\n      // decelerating to zero velocity\n      easeOutQuad: function (t) { return t * (2 - t) },\n      // acceleration until halfway, then deceleration\n      easeInOutQuad: function (t) { return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t },\n      // accelerating from zero velocity \n      easeInCubic: function (t) { return t * t * t },\n      // decelerating to zero velocity \n      easeOutCubic: function (t) { return (--t) * t * t + 1 },\n      // acceleration until halfway, then deceleration \n      easeInOutCubic: function (t) { return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1 },\n      // accelerating from zero velocity \n      easeInQuart: function (t) { return t * t * t * t },\n      // decelerating to zero velocity \n      easeOutQuart: function (t) { return 1 - (--t) * t * t * t },\n      // acceleration until halfway, then deceleration\n      easeInOutQuart: function (t) { return t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t },\n      // accelerating from zero velocity\n      easeInQuint: function (t) { return t * t * t * t * t },\n      // decelerating to zero velocity\n      easeOutQuint: function (t) { return 1 + (--t) * t * t * t * t },\n      // acceleration until halfway, then deceleration \n      easeInOutQuint: function (t) { return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t }\n    }\n  }\n\n  static elasticEasingFunctions() {\n    return {\n      // elastic bounce effect at the beginning\n      easeInElastic: function (t) { return (.04 - .04 / t) * Math.sin(25 * t) + 1 },\n      // elastic bounce effect at the end\n      easeOutElastic: function (t) { return .04 * t / (--t) * Math.sin(25 * t) },\n      // elastic bounce effect at the beginning and end\n      easeInOutElastic: function (t) { return (t -= .5) < 0 ? (.02 + .01 / t) * Math.sin(50 * t) : (.02 - .01 / t) * Math.sin(50 * t) + 1 }\n    }\n  }\n}\n","export default class Canvas {\n  constructor(config = {}) {\n    this.width = config.width || 600\n    this.height = config.height || 600\n    this.bgColor = config.bgColor || 'none'\n    this.fps = config.fps || 60\n    this.hook = config.hook\n\n    this.appendToBody()\n\n    this.canvas = document.querySelector('canvas')\n    this.ctx = this.canvas.getContext(\"2d\")\n    this.canvasPosition = this.canvas.getBoundingClientRect()\n    this.stop = false\n  }\n\n  appendToBody() {\n    const c = document.createElement('canvas')\n    let appendElement = document.body\n    c.width = this.width\n    c.height = this.height\n    c.style.background = this.bgColor\n\n    if (this.hook) {\n      appendElement = document.querySelector(this.hook)\n    }\n\n    appendElement.append(c)\n  }\n\n  startAnimation(stop = false) {\n    this.stop = stop\n  }\n\n  stopAnimation(stop = true) {\n    this.stop = stop\n  }\n\n  rect({ x, y, width, height, color = '#000', strokeWidth, strokeColor, shadow, rotate }) {\n    this.ctx.fillStyle = color;\n\n    if (strokeWidth) {\n      this.ctx.strokeWidth = strokeWidth\n      this.ctx.strokeStyle = strokeColor;\n    }\n\n    if (shadow) {\n      this.addShadow(shadow)\n    }\n\n    if (rotate) {\n      this.ctx.translate(x + width / 2, y + height / 2);\n      this.ctx.rotate(rotate);\n      this.ctx.fillRect(-width / 2, -height / 2, width, height);\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n      return\n    }\n\n    this.ctx.fillRect(x, y, width, height);\n  }\n\n  line({ x1, y1, x2, y2, lineWidth = 1, shadow, color = '#fff' }) {\n    this.ctx.beginPath();\n\n    if (shadow) {\n      this.addShadow(shadow)\n    }\n\n    this.ctx.moveTo(x1, y1);\n    this.ctx.lineTo(x2, y2);\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.strokeStyle = color;\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  arc({ x, y, r, color, strokeWidth, strokeColor }) {\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, r, 0, Math.PI * 2, true);\n\n    if (strokeWidth) {\n      this.ctx.stroekeWidth = strokeWidth\n      this.ctx.strokeStyle = strokeColor\n      this.ctx.stroke();\n    }\n\n    if (color) {\n      this.ctx.fillStyle = color;\n      this.ctx.fill();\n    }\n  }\n\n  createImage({ src, sx, sy, sWidth, sHeight, x, y, width, height }) {\n    if (!width && !height) {\n      this.ctx.drawImage(src, x, y);\n\n      return;\n    } else if (width && height && !sx && !sy && !sWidth && !sHeight) {\n      this.ctx.drawImage(src, x, y, width, height);\n\n      return;\n    }\n\n    this.ctx.drawImage(src, sx, sy, sWidth, sHeight, x, y, width, height);\n  }\n\n  addShadow({ offsetX = 2, offsetY = 2, blur = 2, color = 'rgba(0, 0, 0, 0.5)' }) {\n    this.ctx.shadowOffsetX = offsetX;\n    this.ctx.shadowOffsetY = offsetY;\n    this.ctx.shadowBlur = blur;\n    this.ctx.shadowColor = color;\n  }\n\n  text({ x, y, fontSize = 12, font = 'serif', color = '#fff', text, center }) {\n    const sizeFactor = fontSize >= 50 ? 1.2 : 0.8 // Todo: refine\n    const textLength = center ? (this.ctx.measureText(text).width / 2) * sizeFactor : 0;\n    this.ctx.font = `${fontSize}px ${font}`;\n    this.ctx.fillStyle = color;\n    this.ctx.fillText(text, x - textLength, y);\n  }\n\n  init(time = 0) {\n    this.time = time\n\n    if (!this.stop) {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.render(time)\n\n      setTimeout(() => {\n        window.requestAnimationFrame(this.init.bind(this));\n      }, 1000 / this.fps);\n    }\n  }\n\n  render(time) {\n    // extend Canvas and overwrite\n  }\n}\n\n\n// img.setAttribute('width', '100%');\n// img.setAttribute('height', '100%');","import Calc from './Calc'\nimport Canvas from './Canvas'\nimport Vector from './Vector'\n\nexport {\n  Calc,\n  Canvas,\n  Vector\n}","import { Canvas, Calc } from '../src'\n\nclass Sprite {\n  constructor(ms, image, pos, width, height) {\n    this.image = image\n    this.ms = ms\n    this.pos = pos\n    this.width = width\n    this.height = height\n    this.center = Calc.createVector(this.width / 2, this.height / 2)\n    this.frameIndex = 0;\n    this.tickCount = 0;\n    this.ticksPerFrame = 0;\n    this.numberOfFrames = 12;\n    this.loop = true\n  }\n\n  render() {\n    const { ms, pos, width, height, frameIndex } = this\n    ms.createImage({\n      src: this.image,\n      sx: this.frameIndex * this.width / this.numberOfFrames,\n      sy: 0,\n      width: this.width / this.numberOfFrames,\n      height: this.height,\n      x: pos.x,\n      y: pos.y,\n      sWidth: this.width / this.numberOfFrames,\n      sHeight: this.height});\n\n    this.tickCount += 1;\n\n    if (this.tickCount > this.ticksPerFrame) {\n      this.tickCount = 0;\n\n      if (this.frameIndex < 2) {\n        // Go to the next frame\n        this.frameIndex += 1;\n      } else if (this.loop) {\n        this.frameIndex = 0;\n      }\n    }\n  }\n}\n\n// http://www.williammalone.com/articles/create-html5-canvas-javascript-sprite-animation/soldier-sprite.png\n\nclass Sprites extends Canvas {\n  constructor() {\n    super({ fps: 10, hook: '.main' })\n\n    this.sprites = []\n    this.isLoaded = false\n    this.colors = [\n      'rgb(200, 148, 82)',\n      'rgb(193, 200, 82)',\n      'rgb(134, 200, 82)',\n      'rgb(82, 200, 89)',\n      'rgb(82, 200, 148)',\n      'rgb(82, 193, 200)'\n    ]\n\n    this.canvas.addEventListener('mousedown', (e) => {\n      this.mouseX = e.clientX - this.canvasPosition.left\n      this.mouseY = e.clientY - this.canvasPosition.top\n\n    }, false)\n\n    this.image = new Image();\n    this.image.src = require('/img/soldier-sprite.png');\n    this.image.onload = () => {\n      this.isLoaded = true\n    }\n\n    this.createSprites()\n\n    this.init()\n  }\n\n  createSprites() {\n    this.sprites.push(new Sprite(this, this.image, Calc.createVector(this.canvas.width / 2 - 50, this.canvas.height / 2 - 50), 192, 16))\n    this.sprites.push(new Sprite(this, this.image, Calc.createVector(this.canvas.width / 2, this.canvas.height / 2 - 50), 192, 16))\n    this.sprites.push(new Sprite(this, this.image, Calc.createVector(this.canvas.width / 2 + 50, this.canvas.height / 2 - 50), 192, 16))\n  }\n\n  createBg() {\n    const gradient = this.ctx.createLinearGradient(0, 0, this.canvas.width, 0);\n    gradient.addColorStop(0, 'green');\n    gradient.addColorStop(.5, 'cyan');\n    gradient.addColorStop(1, 'green');\n\n    this.rect({ x: 0, y: 0, color: gradient, width: this.canvas.width, height: this.canvas.height })\n  }\n\n\n  render() {\n    this.createBg()\n    if (this.isLoaded) {\n      for (const sprite of this.sprites) {\n        sprite.render()\n      }\n    }\n  }\n}\n\nnew Sprites"]}