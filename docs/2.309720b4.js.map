{"version":3,"sources":["../src/Vector.js","../src/Calc.js","../src/Canvas.js","../src/index.js","2.js"],"names":["Vector","x","y","_x","_y","vectorLimit","undefined","factor","factor2","limit","limit2","x2","y2","Math","atan2","Calc","x1","y1","r1","r2","abs","n","min","max","random","z","hypot","angle","PI","floor","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInElastic","sin","easeOutElastic","easeInOutElastic","Canvas","config","width","height","bgColor","fps","hook","appendToBody","canvas","document","querySelector","ctx","getContext","canvasPosition","getBoundingClientRect","stop","c","createElement","appendElement","body","style","background","append","color","strokeWidth","strokeColor","shadow","rotate","fillStyle","strokeStyle","addShadow","translate","fillRect","setTransform","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","r","arc","stroekeWidth","fill","offsetX","offsetY","blur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","fontSize","font","text","sizeFactor","textLength","center","measureText","fillText","time","clearRect","render","setTimeout","window","requestAnimationFrame","init","bind","Cell","morningstar","ms","visited","neighbors","walls","currentCell","line","rect","Maze","cols","rows","cellWidth","cellHeight","cells","stack","generateCells","getNeighbors","push","i","length","cell","top","right","bottom","left","neighbor","filter","splice","show","every","console","warn","stopAnimation"],"mappings":"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","file":"2.309720b4.js","sourceRoot":"../examples","sourcesContent":["export default class Vector {\n  constructor(x, y) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this.vectorLimit = undefined;\n  }\n\n  set x(x) {\n    this._x =\n      this.vectorLimit && x > this.vectorLimit.x ? this.vectorLimit.x : x;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  set y(y) {\n    this._y =\n      this.vectorLimit && y > this.vectorLimit.y ? this.vectorLimit.y : y;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  mult(factor, factor2 = undefined) {\n    this.x *= factor;\n    this.y *= factor2 || factor;\n  }\n\n  div(factor, factor2 = undefined) {\n    this.x /= factor;\n    this.y /= factor2 || factor;\n  }\n\n  add(factor, factor2 = undefined) {\n    this.x += factor;\n    this.y += factor2 || factor;\n  }\n\n  sub(factor, factor2 = undefined) {\n    this.x -= factor;\n    this.y -= factor2 || factor;\n  }\n\n  limit(limit, limit2 = undefined) {\n    this.vectorLimit = {\n      x: limit,\n      y: limit2 || limit\n    };\n\n    this.x = this.x > this.vectorLimit.x ? this.vectorLimit.x : this.x;\n    this.y = this.y > this.vectorLimit.y ? this.vectorLimit.y : this.y;\n  }\n\n  unLimit() {\n    this.vectorLimit = undefined;\n  }\n\n  heading(x2, y2) {\n    return Math.atan2(y2 - this.y, x2 - this.x);\n  }\n}\n","import Vector from './Vector'\n\nexport default class Calc {\n  constructor() { }\n\n  static constrain(n, min, max) {\n    return n < min ? min : n && n > max ? max : n;\n  }\n\n  static createVector(x, y) {\n    return new Vector(x, y);\n  }\n\n  static createRandomVector() {\n    const x = Math.random() > 0.5 ? Math.random() : -Math.random();\n    const y = Math.random() > 0.5 ? Math.random() : -Math.random();\n\n    return new Vector(x, y);\n  }\n\n  static create3DVector(x = 0, y = 0, z = 0) {\n    return { x, y, z }\n  }\n\n  static dist(x1, y1, x2, y2) {\n    return Math.hypot(x2 - x1, y2 - y1);\n  }\n\n  static heading(x1, y1, x2, y2) {\n    return Math.atan2(y2 - y1, x2 - x1);\n  }\n\n  static toDegrees(angle) {\n    return angle * (180 / Math.PI);\n  }\n\n  static toRadians(angle) {\n    return angle * (Math.PI / 180);\n  }\n\n  static invertAngle(angle) {\n    return (angle + Math.PI) % (2 * Math.PI);\n  }\n\n  circlesCollide(x1, y1, r1, x2, y2, r2) {\n    return Math.abs((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)) < (r1 + r2) * (r1 + r2);\n  }\n\n  static random(min = 0, max = 255) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  static easingFunctions() {\n    return {\n      // no easing, no acceleration\n      linear: function (t) { return t },\n      // accelerating from zero velocity\n      easeInQuad: function (t) { return t * t },\n      // decelerating to zero velocity\n      easeOutQuad: function (t) { return t * (2 - t) },\n      // acceleration until halfway, then deceleration\n      easeInOutQuad: function (t) { return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t },\n      // accelerating from zero velocity \n      easeInCubic: function (t) { return t * t * t },\n      // decelerating to zero velocity \n      easeOutCubic: function (t) { return (--t) * t * t + 1 },\n      // acceleration until halfway, then deceleration \n      easeInOutCubic: function (t) { return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1 },\n      // accelerating from zero velocity \n      easeInQuart: function (t) { return t * t * t * t },\n      // decelerating to zero velocity \n      easeOutQuart: function (t) { return 1 - (--t) * t * t * t },\n      // acceleration until halfway, then deceleration\n      easeInOutQuart: function (t) { return t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t },\n      // accelerating from zero velocity\n      easeInQuint: function (t) { return t * t * t * t * t },\n      // decelerating to zero velocity\n      easeOutQuint: function (t) { return 1 + (--t) * t * t * t * t },\n      // acceleration until halfway, then deceleration \n      easeInOutQuint: function (t) { return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t }\n    }\n  }\n\n  static elasticEasingFunctions() {\n    return {\n      // elastic bounce effect at the beginning\n      easeInElastic: function (t) { return (.04 - .04 / t) * Math.sin(25 * t) + 1 },\n      // elastic bounce effect at the end\n      easeOutElastic: function (t) { return .04 * t / (--t) * Math.sin(25 * t) },\n      // elastic bounce effect at the beginning and end\n      easeInOutElastic: function (t) { return (t -= .5) < 0 ? (.02 + .01 / t) * Math.sin(50 * t) : (.02 - .01 / t) * Math.sin(50 * t) + 1 }\n    }\n  }\n}\n","export default class Canvas {\n  constructor(config = {}) {\n    this.width = config.width || 600\n    this.height = config.height || 600\n    this.bgColor = config.bgColor || '#000'\n    this.fps = config.fps || 60\n    this.hook = config.hook\n\n    this.appendToBody()\n\n    this.canvas = document.querySelector('canvas')\n    this.ctx = this.canvas.getContext(\"2d\")\n    this.canvasPosition = this.canvas.getBoundingClientRect()\n    this.stop = false\n  }\n\n  appendToBody() {\n    const c = document.createElement('canvas')\n    let appendElement = document.body\n    c.width = this.width\n    c.height = this.height\n    c.style.background = this.bgColor\n\n    if(this.hook) {\n      appendElement = document.querySelector(this.hook)\n    }\n\n    appendElement.append(c)\n  }\n\n  startAnimation(stop = false) {\n    this.stop = stop\n  }\n\n  stopAnimation(stop = true) {\n    this.stop = stop\n  }\n\n  rect({ x, y, width, height, color, strokeWidth, strokeColor, shadow, rotate }) {\n    this.ctx.fillStyle = color;\n\n    if (strokeWidth) {\n      this.ctx.strokeWidth = strokeWidth\n      this.ctx.strokeStyle = strokeColor;\n    }\n\n    if (shadow) {\n      this.addShadow(shadow)\n    }\n\n    if (rotate) {\n      this.ctx.translate(x + width / 2, y + height / 2);\n      this.ctx.rotate(rotate);\n      this.ctx.fillRect(-width / 2, -height / 2, width, height);\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n      return\n    }\n\n    this.ctx.fillRect(x, y, width, height);\n  }\n\n  line({ x1, y1, x2, y2, lineWidth = 1, shadow, color = '#fff' }) {\n    this.ctx.beginPath();\n\n    if (shadow) {\n      this.addShadow(shadow)\n    }\n\n    this.ctx.moveTo(x1, y1);\n    this.ctx.lineTo(x2, y2);\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.strokeStyle = color;\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  arc({ x, y, r, color, strokeWidth, strokeColor }) {\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, r, 0, Math.PI * 2, true);\n\n    if (strokeWidth) {\n      this.ctx.stroekeWidth = strokeWidth\n      this.ctx.strokeStyle = strokeColor\n      this.ctx.stroke();\n    }\n\n    if (color) {\n      this.ctx.fillStyle = color;\n      this.ctx.fill();\n    }\n  }\n\n  addShadow({ offsetX = 2, offsetY = 2, blur = 2, color = 'rgba(0, 0, 0, 0.5)' }) {\n    this.ctx.shadowOffsetX = offsetX;\n    this.ctx.shadowOffsetY = offsetY;\n    this.ctx.shadowBlur = blur;\n    this.ctx.shadowColor = color;\n  }\n\n  text({ x, y, fontSize = 12, font = 'serif', color = '#fff', text, center }) {\n    const sizeFactor = fontSize >= 50 ? 1.2 : 0.8 // Todo: refine\n    const textLength = center ? (this.ctx.measureText(text).width / 2) * sizeFactor : 0;\n    this.ctx.font = `${fontSize}px ${font}`;\n    this.ctx.fillStyle = color;\n    this.ctx.fillText(text, x - textLength, y);\n  }\n\n  init(time = 0) {\n    this.time = time\n\n    if (!this.stop) {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.render(time)\n\n      setTimeout(() => {\n        window.requestAnimationFrame(this.init.bind(this));\n      }, 1000 / this.fps);\n    }\n  }\n\n  render(time) {\n    // extend Canvas and overwrite\n  }\n}\n\n\n// img.setAttribute('width', '100%');\n// img.setAttribute('height', '100%');","import Calc from './Calc'\nimport Canvas from './Canvas'\nimport Vector from './Vector'\n\nexport {\n  Calc,\n  Canvas,\n  Vector\n}","import { Canvas } from '../src'\n\n// https://en.wikipedia.org/wiki/Maze_generation_algorithm\n\nclass Cell {\n  constructor(morningstar, width, height, x, y) {\n    this.ms = morningstar\n    this.ctx = morningstar.ctx\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n    this.visited = false;\n    this.neighbors = [];\n    // Top, Right, Bottom, Left\n    this.walls = [1, 1, 1, 1];\n  }\n\n  show(currentCell) {\n    if (this.walls[0]) {\n      this.ms.line({\n        x1: this.x, y1: this.y, x2: this.x + this.width, y2: this.y\n      })\n    }\n\n    if (this.walls[1]) {\n      this.ms.line({\n        x1: this.x + this.width, y1: this.y, x2: this.x + this.width, y2: this.y + this.height\n      })\n    }\n\n    if (this.walls[2]) {\n      this.ms.line({\n        x1: this.x + this.width, y1: this.y + this.height, x2: this.x, y2: this.y + this.height\n      })\n    }\n\n    if (this.walls[3]) {\n      this.ms.line({\n        x1: this.x, y1: this.y + this.height, x2: this.x, y2: this.y\n      })\n    }\n\n    if (currentCell) {\n      this.ms.rect({\n        x: this.x, y: this.y, width: this.width, height: this.height, color: '#9bf442'\n      })\n    }\n  }\n\n  createWall(x1, y1, x2, y2) {\n    const shadow = {\n      offsetX: 2\n    }\n    this.ms.line({ x1, y1, x2, y2, shadow })\n  }\n}\n\nclass Maze extends Canvas {\n  constructor() {\n    super({ bgColor: '#666', fps: 60, hook: '.main' })\n\n    this.cols = 25;\n    this.rows = 25;\n    this.cellWidth = this.canvas.width / this.cols;\n    this.cellHeight = this.canvas.height / this.rows;\n    this.cells = [];\n    this.stack = [];\n\n    this.generateCells()\n    this.getNeighbors()\n    this.currentCell = this.cells[0];\n    this.currentCell.visited = true;\n    this.stack.push(this.currentCell)\n\n    this.init()\n  }\n\n  generateCells() {\n    for (let x = 0; x < this.cols; x++) {\n      for (let y = 0; y < this.rows; y++) {\n        this.cells.push(new Cell(this, this.cellWidth, this.cellHeight, this.cellWidth * y, this.cellHeight * x))\n      }\n    }\n  }\n\n  getNeighbors() {\n    for (let i = 0; i < this.cells.length - 1; i++) {\n      const cell = this.cells[i];\n      const top = i - this.rows;\n      const right = i + 1;\n      const bottom = i + this.cols;\n      const left = i - 1;\n\n      if (this.cells[top]) {\n        cell.neighbors.push(this.cells[top]);\n      }\n\n      if (this.cells[bottom]) {\n        cell.neighbors.push(this.cells[bottom]);\n      }\n\n      if (this.cells[left] && cell.x > 0) {\n        cell.neighbors.push(this.cells[left]);\n      }\n\n      if (this.cells[right] && cell.x + this.cellWidth < this.width) {\n        cell.neighbors.push(this.cells[right]);\n      }\n    }\n  }\n\n  render() {\n    const neighbors = this.currentCell.neighbors.filter(neighbor => !neighbor.visited);\n\n    if (neighbors.length) {\n      let neighbor\n      if (neighbors.length === 1) {\n        neighbor = neighbors[0]\n      } else {\n        neighbor = neighbors[Math.floor(Math.random() * neighbors.length)];\n      }\n\n      // remove wall between neighbor and current cell\n      if (this.currentCell.x < neighbor.x) {\n        // remove current right- and neighbor left wall\n        this.currentCell.walls[1] = 0;\n        neighbor.walls[3] = 0;\n      } else if (this.currentCell.x > neighbor.x) {\n        // remove current left- and neighbor right wall\n        this.currentCell.walls[3] = 0;\n        neighbor.walls[1] = 0;\n      } else if (this.currentCell.y > neighbor.y) {\n        // remove current top- and neighbor bottom wall\n        this.currentCell.walls[0] = 0;\n        neighbor.walls[2] = 0;\n      } else if (this.currentCell.y < neighbor.y) {\n        // remove current bottom- and neighbor top wall\n        this.currentCell.walls[2] = 0;\n        neighbor.walls[0] = 0;\n      }\n\n      neighbor.visited = true;\n      this.stack.push(neighbor)\n      this.currentCell = neighbor;\n    } else {\n      // Take random unvisited cell\n      this.currentCell = this.stack.splice(0, 1)[0]\n    }\n\n    for (let cell of this.cells) {\n      cell.show(this.currentCell === cell)\n    }\n\n    if (this.cells.every(cell => cell.visited)) {\n      console.warn(\"Maze Complete\");\n      this.stopAnimation()\n    }\n  }\n}\n\nnew Maze()\n"]}