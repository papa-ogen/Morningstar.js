{"version":3,"sources":["../src/Vector.js","../src/Calc.js","../src/Canvas.js","../src/index.js","3.js"],"names":["Vector","x","y","_x","_y","vectorLimit","undefined","factor","factor2","limit","limit2","x2","y2","Math","atan2","Calc","HALF_PI","PI","DOUBLE_PI","n","min","max","random","z","x1","y1","hypot","angle","r1","r2","abs","rect1","rect2","width","height","cX","cY","cR","rX","rY","rW","rH","distX","distY","dx","dy","floor","offset","rand","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInElastic","sin","easeOutElastic","easeInOutElastic","Canvas","config","bgColor","fps","hook","appendToBody","canvas","document","querySelector","ctx","getContext","canvasPosition","getBoundingClientRect","stop","c","createElement","appendElement","body","style","background","append","color","strokeWidth","strokeColor","shadow","rotate","fillStyle","strokeStyle","addShadow","translate","fillRect","setTransform","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","r","arc","stroekeWidth","fill","src","sx","sy","sWidth","sHeight","drawImage","offsetX","offsetY","blur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","fontSize","font","text","sizeFactor","textLength","center","measureText","fillText","time","clearRect","render","setTimeout","window","requestAnimationFrame","init","bind","Flake","morningstar","pos","vel","acc","alpha","ms","radius","Snow","flakesForeground","flakesBackground","flakesFarAway","image","Image","createFlakes","createFlakes2","createFlakes3","loadLogo","grd","createLinearGradient","addColorStop","require","onload","loaded","i","velX","velY","velZ","accY","accZ","push","create3DVector","bg","centerX","centerY"],"mappings":"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","file":"3.7bb36f6e.js","sourceRoot":"../examples","sourcesContent":["export default class Vector {\n  constructor(x, y) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this.vectorLimit = undefined;\n  }\n\n  set x(x) {\n    this._x =\n      this.vectorLimit && x > this.vectorLimit.x ? this.vectorLimit.x : x;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  set y(y) {\n    this._y =\n      this.vectorLimit && y > this.vectorLimit.y ? this.vectorLimit.y : y;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  mult(factor, factor2 = undefined) {\n    this.x *= factor;\n    this.y *= factor2 || factor;\n  }\n\n  div(factor, factor2 = undefined) {\n    this.x /= factor;\n    this.y /= factor2 || factor;\n  }\n\n  add(factor, factor2 = undefined) {\n    this.x += factor;\n    this.y += factor2 || factor;\n  }\n\n  sub(factor, factor2 = undefined) {\n    this.x -= factor;\n    this.y -= factor2 || factor;\n  }\n\n  limit(limit, limit2 = undefined) {\n    this.vectorLimit = {\n      x: limit,\n      y: limit2 || limit\n    };\n\n    this.x = this.x > this.vectorLimit.x ? this.vectorLimit.x : this.x;\n    this.y = this.y > this.vectorLimit.y ? this.vectorLimit.y : this.y;\n  }\n\n  unLimit() {\n    this.vectorLimit = undefined;\n  }\n\n  heading(x2, y2) {\n    return Math.atan2(y2 - this.y, x2 - this.x);\n  }\n}\n","import Vector from './Vector'\n\nexport default class Calc {\n  constructor() {\n    this.HALF_PI = Math.PI / 2\n    this.DOUBLE_PI = Math.PI * 2\n  }\n\n  static constrain(n, min, max) {\n    return n < min ? min : n && n > max ? max : n;\n  }\n\n  static createVector(x, y) {\n    return new Vector(x, y);\n  }\n\n  static createRandomVector() {\n    const x = Math.random() > 0.5 ? Math.random() : -Math.random();\n    const y = Math.random() > 0.5 ? Math.random() : -Math.random();\n\n    return new Vector(x, y);\n  }\n\n  static create3DVector(x = 0, y = 0, z = 0) {\n    return { x, y, z }\n  }\n\n  static dist(x1, y1, x2, y2) {\n    return Math.hypot(x2 - x1, y2 - y1);\n  }\n\n  static heading(x1, y1, x2, y2) {\n    return Math.atan2(y2 - y1, x2 - x1);\n  }\n\n  static toDegrees(angle) {\n    return angle * (180 / Math.PI);\n  }\n\n  static toRadians(angle) {\n    return angle * (Math.PI / 180);\n  }\n\n  static invertAngle(angle) {\n    return (angle + Math.PI) % (2 * Math.PI);\n  }\n\n  static circlesCollide(x1, y1, r1, x2, y2, r2) {\n    return Math.abs((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)) < (r1 + r2) * (r1 + r2);\n  }\n\n  static rectangleCollide(rect1, rect2) {\n    return (rect1.x < rect2.x + rect2.width &&\n      rect1.x + rect1.width > rect2.x &&\n      rect1.y < rect2.y + rect2.height &&\n      rect1.y + rect1.height > rect2.y)\n  }\n\n  static circleRectangleCollide(cX, cY, cR, rX, rY, rW, rH) {\n    const distX = Math.abs(cX - rX - rW / 2);\n    const distY = Math.abs(cY - rY - rH / 2);\n\n    if (distX > (rW / 2 + cR)) { return false; }\n    if (distY > (rH / 2 + cR)) { return false; }\n\n    if (distX <= (rW / 2)) { return true; }\n    if (distY <= (rH / 2)) { return true; }\n\n    const dx = distX - rW / 2;\n    const dy = distY - rH / 2;\n    return (dx * dx + dy * dy <= (cR * cR));\n  }\n\n  static random(min = 0, max = 255) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  static randomOffset(offset) {\n    const rand = Math.random()\n    return rand > 0.5 ? rand * offset : -rand * offset\n  }\n\n  static easingFunctions() {\n    return {\n      // no easing, no acceleration\n      linear: function (t) { return t },\n      // accelerating from zero velocity\n      easeInQuad: function (t) { return t * t },\n      // decelerating to zero velocity\n      easeOutQuad: function (t) { return t * (2 - t) },\n      // acceleration until halfway, then deceleration\n      easeInOutQuad: function (t) { return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t },\n      // accelerating from zero velocity \n      easeInCubic: function (t) { return t * t * t },\n      // decelerating to zero velocity \n      easeOutCubic: function (t) { return (--t) * t * t + 1 },\n      // acceleration until halfway, then deceleration \n      easeInOutCubic: function (t) { return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1 },\n      // accelerating from zero velocity \n      easeInQuart: function (t) { return t * t * t * t },\n      // decelerating to zero velocity \n      easeOutQuart: function (t) { return 1 - (--t) * t * t * t },\n      // acceleration until halfway, then deceleration\n      easeInOutQuart: function (t) { return t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t },\n      // accelerating from zero velocity\n      easeInQuint: function (t) { return t * t * t * t * t },\n      // decelerating to zero velocity\n      easeOutQuint: function (t) { return 1 + (--t) * t * t * t * t },\n      // acceleration until halfway, then deceleration \n      easeInOutQuint: function (t) { return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t }\n    }\n  }\n\n  static elasticEasingFunctions() {\n    return {\n      // elastic bounce effect at the beginning\n      easeInElastic: function (t) { return (.04 - .04 / t) * Math.sin(25 * t) + 1 },\n      // elastic bounce effect at the end\n      easeOutElastic: function (t) { return .04 * t / (--t) * Math.sin(25 * t) },\n      // elastic bounce effect at the beginning and end\n      easeInOutElastic: function (t) { return (t -= .5) < 0 ? (.02 + .01 / t) * Math.sin(50 * t) : (.02 - .01 / t) * Math.sin(50 * t) + 1 }\n    }\n  }\n}\n","export default class Canvas {\n  constructor(config = {}) {\n    this.width = config.width || 600\n    this.height = config.height || 600\n    this.bgColor = config.bgColor || 'none'\n    this.fps = config.fps || 60\n    this.hook = config.hook\n\n    this.appendToBody()\n\n    this.canvas = document.querySelector('canvas')\n    this.ctx = this.canvas.getContext(\"2d\")\n    this.canvasPosition = this.canvas.getBoundingClientRect()\n    this.stop = false\n  }\n\n  appendToBody() {\n    const c = document.createElement('canvas')\n    let appendElement = document.body\n    c.width = this.width\n    c.height = this.height\n    c.style.background = this.bgColor\n\n    if (this.hook) {\n      appendElement = document.querySelector(this.hook)\n    }\n\n    appendElement.append(c)\n  }\n\n  startAnimation(stop = false) {\n    this.stop = stop\n  }\n\n  stopAnimation(stop = true) {\n    this.stop = stop\n  }\n\n  rect({ x, y, width, height, color = '#000', strokeWidth, strokeColor, shadow, rotate }) {\n    this.ctx.fillStyle = color;\n\n    if (strokeWidth) {\n      this.ctx.strokeWidth = strokeWidth\n      this.ctx.strokeStyle = strokeColor;\n    }\n\n    if (shadow) {\n      this.addShadow(shadow)\n    }\n\n    if (rotate) {\n      this.ctx.translate(x + width / 2, y + height / 2);\n      this.ctx.rotate(rotate);\n      this.ctx.fillRect(-width / 2, -height / 2, width, height);\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n      return\n    }\n\n    this.ctx.fillRect(x, y, width, height);\n  }\n\n  line({ x1, y1, x2, y2, lineWidth = 1, shadow, color = '#fff' }) {\n    this.ctx.beginPath();\n\n    if (shadow) {\n      this.addShadow(shadow)\n    }\n\n    this.ctx.moveTo(x1, y1);\n    this.ctx.lineTo(x2, y2);\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.strokeStyle = color;\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  arc({ x, y, r, color, strokeWidth, strokeColor }) {\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, r, 0, Math.PI * 2, true);\n\n    if (strokeWidth) {\n      this.ctx.stroekeWidth = strokeWidth\n      this.ctx.strokeStyle = strokeColor\n      this.ctx.stroke();\n    }\n\n    if (color) {\n      this.ctx.fillStyle = color;\n      this.ctx.fill();\n    }\n  }\n\n  createImage({ src, sx, sy, sWidth, sHeight, x, y, width, height }) {\n    if (!width && !height) {\n      this.ctx.drawImage(src, x, y);\n\n      return;\n    } else if (width && height && !sx && !sy && !sWidth && !sHeight) {\n      this.ctx.drawImage(src, x, y, width, height);\n\n      return;\n    }\n\n    this.ctx.drawImage(src, sx, sy, sWidth, sHeight, x, y, width, height);\n  }\n\n  addShadow({ offsetX = 2, offsetY = 2, blur = 2, color = 'rgba(0, 0, 0, 0.5)' }) {\n    this.ctx.shadowOffsetX = offsetX;\n    this.ctx.shadowOffsetY = offsetY;\n    this.ctx.shadowBlur = blur;\n    this.ctx.shadowColor = color;\n  }\n\n  text({ x, y, fontSize = 12, font = 'serif', color = '#fff', text, center }) {\n    const sizeFactor = fontSize >= 50 ? 1.2 : 0.8 // Todo: refine\n    const textLength = center ? (this.ctx.measureText(text).width / 2) * sizeFactor : 0;\n    this.ctx.font = `${fontSize}px ${font}`;\n    this.ctx.fillStyle = color;\n    this.ctx.fillText(text, x - textLength, y);\n  }\n\n  init(time = 0) {\n    this.time = time\n\n    if (!this.stop) {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.render(time)\n\n      setTimeout(() => {\n        window.requestAnimationFrame(this.init.bind(this));\n      }, 1000 / this.fps);\n    }\n  }\n\n  render(time) {\n    // extend Canvas and overwrite\n  }\n}\n\n\n// img.setAttribute('width', '100%');\n// img.setAttribute('height', '100%');","import Calc from './Calc'\nimport Canvas from './Canvas'\nimport Vector from './Vector'\n\nexport {\n  Calc,\n  Canvas,\n  Vector\n}","import { Canvas, Calc } from '../src'\n\nclass Flake {\n  constructor(morningstar, pos, r, vel, acc, alpha = 1) {\n    this.ctx = morningstar.ctx\n    this.ms = morningstar\n    this.pos = pos\n    this.vel = vel\n    this.acc = acc\n    this.r = r\n    this.alpha = alpha\n  }\n\n  render() {\n    const { pos: { x, y, z }, r, alpha } = this\n    const radius = (z * r) + r\n    this.ms.arc({ x, y, r: radius, color: `rgba(255, 255, 255, ${alpha}` })\n\n    this.pos.x += this.vel.x\n    this.pos.y += this.vel.y\n    this.pos.z += this.vel.z\n    this.vel.x += this.acc.x\n    this.vel.y += this.acc.y\n    this.vel.z += this.acc.z\n    \n    if(this.pos.z < 0) {\n      this.pos.z = 0\n    }\n    \n    if(this.vel.z < (-1)) {\n//      console.log(radius, this.vel.z, this.acc.z)\n    }\n\n    if (this.pos.y > this.ms.canvas.height) {\n      this.pos.y = -this.r\n      this.vel.x = Math.random() < 0.5 ? -Math.random() : Math.random();\n      this.vel.y = Calc.random(1, 15 / r)\n      this.z = Calc.random(-0.5, 2)\n    }\n  }\n}\n\nclass Snow extends Canvas {\n  constructor() {\n    super({ fps: 60, bgColor: 'rgb(50, 50, 50)', width: 800, height: 600, hook: '.main' })\n    this.flakesForeground = []\n    this.flakesBackground = []\n    this.flakesFarAway = []\n\n    this.image = new Image();\n\n    this.createFlakes()\n    this.createFlakes2()\n    this.createFlakes3()\n    this.loadLogo()\n\n    this.init()\n  }\n\n  bg() {\n    var grd = this.ctx.createLinearGradient(0, this.canvas.height, 0, 0);\n    grd.addColorStop(0, \"#1f3342\");\n    grd.addColorStop(1, \"black\");\n\n    this.ctx.fillStyle = grd;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  loadLogo() {\n    this.image.src = require('/img/logo.png');\n    this.image.onload = () => {\n      this.loaded = true\n    }\n  }\n\n  createFlakes() {\n    for (let i = 0; i < 50; i++) {\n      const x = Calc.random(0, this.canvas.width)\n      const y = Calc.random(0, this.canvas.height) - this.canvas.height - 100\n      const z = Calc.random(-0.5, 2)\n      const r = Calc.random(1, 4)\n      const velX = Math.random() < 0.5 ? -Math.random() : Math.random();\n      const velY = Calc.random(1, 6 / r)\n      const velZ = Calc.random(0, 1)\n      const accX = 0\n      const accY = Calc.random(0, 0.5)\n      const accZ = Calc.random(-0.005, 0.005)\n\n      this.flakesForeground.push(new Flake(this, Calc.create3DVector(x, y, z), r, Calc.create3DVector(velX, velY, velZ), Calc.create3DVector(accX, accY, accZ)))\n    }\n  }\n\n  createFlakes2() {\n    for (let i = 0; i < 50; i++) {\n      const x = Calc.random(0, this.canvas.width)\n      const y = Calc.random(0, this.canvas.height) - this.canvas.height - 100\n      const r = Calc.random(2, 5)\n      const velX = Math.random() < 0.5 ? -Math.random() : Math.random();\n      const velY = Calc.random(1, 2)\n      const accX = 0\n      const accY = Calc.random(0, 0.5)\n\n      this.flakesBackground.push(new Flake(this, Calc.create3DVector(x, y), r, Calc.create3DVector(velX, velY), Calc.create3DVector(accX, accY)))\n    }\n  }\n\n  createFlakes3() {\n    for (let i = 0; i < 50; i++) {\n      const x = Calc.random(0, this.canvas.width)\n      const y = Calc.random(0, this.canvas.height) - this.canvas.height - 100\n      const r = Calc.random(2, 5)\n      const velX = Math.random() < 0.5 ? -Math.random() : Math.random();\n      const velY = Calc.random(1, 1.5)\n      const accX = 0\n      const accY = Calc.random(0, 0.2)\n\n      this.flakesBackground.push(new Flake(this, Calc.create3DVector(x, y), r, Calc.create3DVector(velX, velY), Calc.create3DVector(accX, accY), 0.3))\n    }\n  }\n\n  render() {\n    this.bg()\n    for (const flake of this.flakesFarAway) {\n      flake.render()\n    }\n    \n    for (const flake of this.flakesBackground) {\n      flake.render()\n    }\n    \n    if (this.loaded) {\n      const height = 400\n      const width = 400\n      const centerX = this.canvas.width / 2 - (width / 2)\n      const centerY = this.canvas.height / 2 - (height / 2)\n      this.ctx.drawImage(this.image, centerX, centerY, height, width)\n    }\n    \n    for (const flake of this.flakesForeground) {\n      flake.render()\n    }\n  }\n}\n\nnew Snow"]}