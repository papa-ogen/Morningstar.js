{"version":3,"sources":["../src/Vector.js","../src/Calc.js","../src/Canvas.js","../src/index.js","classes/Bullet.js","classes/Tank.js","classes/Circle.js","classes/Particle.js","6.js"],"names":["Vector","x","y","_x","_y","vectorLimit","undefined","factor","factor2","limit","limit2","x2","y2","Math","atan2","Calc","x1","y1","r1","r2","abs","n","min","max","random","z","hypot","angle","PI","floor","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInElastic","sin","easeOutElastic","easeInOutElastic","Canvas","config","width","height","bgColor","fps","hook","appendToBody","canvas","document","querySelector","ctx","getContext","canvasPosition","getBoundingClientRect","stop","c","createElement","appendElement","body","style","background","append","color","strokeWidth","strokeColor","shadow","rotate","fillStyle","strokeStyle","addShadow","translate","fillRect","setTransform","lineWidth","beginPath","moveTo","lineTo","stroke","closePath","r","arc","stroekeWidth","fill","offsetX","offsetY","blur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","fontSize","font","text","sizeFactor","textLength","center","measureText","fillText","time","clearRect","render","setTimeout","window","requestAnimationFrame","init","bind","Bullet","ms","pos","velocity","bullets","splice","Tank","turret","isMoving","dir","bullet","push","barrelDebree","rect","Circle","morningstar","vel","acc","acceleration","objects","object","movingCircleCollision","c1","c2","combinedRadii","overlap","xSide","ySide","s","p1A","p1B","p2A","p2B","mass","vx","cos","vy","magnitude","sqrt","dx","dy","vxHalf","vyHalf","lx","ly","dp1","dp2","dp3","dp4","bounce","vx2","vy2","deltaX","deltaY","deltaX2","deltaY2","circles","collidedCircle","collision","contactPoint","createVector","contactAngle","circleCollisionPoint","collisionX","collisionY","createParticles","destroy","health","reflectionAngleTopBottom","Particle","position","_position","alpha","SquareParticle","CircleParticle","radius","BallsAndTanks","particles","colors","tank","addEventListener","e","keyCode","shoot","setInterval","createCircle","grd","createLinearGradient","addColorStop","i","create3DVector","bg","update","particle","stopAnimation"],"mappings":"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","file":"6.73a3204e.js","sourceRoot":"../examples","sourcesContent":["export default class Vector {\n  constructor(x, y) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this.vectorLimit = undefined;\n  }\n\n  set x(x) {\n    this._x =\n      this.vectorLimit && x > this.vectorLimit.x ? this.vectorLimit.x : x;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  set y(y) {\n    this._y =\n      this.vectorLimit && y > this.vectorLimit.y ? this.vectorLimit.y : y;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  mult(factor, factor2 = undefined) {\n    this.x *= factor;\n    this.y *= factor2 || factor;\n  }\n\n  div(factor, factor2 = undefined) {\n    this.x /= factor;\n    this.y /= factor2 || factor;\n  }\n\n  add(factor, factor2 = undefined) {\n    this.x += factor;\n    this.y += factor2 || factor;\n  }\n\n  sub(factor, factor2 = undefined) {\n    this.x -= factor;\n    this.y -= factor2 || factor;\n  }\n\n  limit(limit, limit2 = undefined) {\n    this.vectorLimit = {\n      x: limit,\n      y: limit2 || limit\n    };\n\n    this.x = this.x > this.vectorLimit.x ? this.vectorLimit.x : this.x;\n    this.y = this.y > this.vectorLimit.y ? this.vectorLimit.y : this.y;\n  }\n\n  unLimit() {\n    this.vectorLimit = undefined;\n  }\n\n  heading(x2, y2) {\n    return Math.atan2(y2 - this.y, x2 - this.x);\n  }\n}\n","import Vector from './Vector'\n\nexport default class Calc {\n  constructor() { }\n\n  static constrain(n, min, max) {\n    return n < min ? min : n && n > max ? max : n;\n  }\n\n  static createVector(x, y) {\n    return new Vector(x, y);\n  }\n\n  static createRandomVector() {\n    const x = Math.random() > 0.5 ? Math.random() : -Math.random();\n    const y = Math.random() > 0.5 ? Math.random() : -Math.random();\n\n    return new Vector(x, y);\n  }\n\n  static create3DVector(x = 0, y = 0, z = 0) {\n    return { x, y, z }\n  }\n\n  static dist(x1, y1, x2, y2) {\n    return Math.hypot(x2 - x1, y2 - y1);\n  }\n\n  static heading(x1, y1, x2, y2) {\n    return Math.atan2(y2 - y1, x2 - x1);\n  }\n\n  static toDegrees(angle) {\n    return angle * (180 / Math.PI);\n  }\n\n  static toRadians(angle) {\n    return angle * (Math.PI / 180);\n  }\n\n  static invertAngle(angle) {\n    return (angle + Math.PI) % (2 * Math.PI);\n  }\n\n  circlesCollide(x1, y1, r1, x2, y2, r2) {\n    return Math.abs((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)) < (r1 + r2) * (r1 + r2);\n  }\n\n  static random(min = 0, max = 255) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  static easingFunctions() {\n    return {\n      // no easing, no acceleration\n      linear: function (t) { return t },\n      // accelerating from zero velocity\n      easeInQuad: function (t) { return t * t },\n      // decelerating to zero velocity\n      easeOutQuad: function (t) { return t * (2 - t) },\n      // acceleration until halfway, then deceleration\n      easeInOutQuad: function (t) { return t < .5 ? 2 * t * t : -1 + (4 - 2 * t) * t },\n      // accelerating from zero velocity \n      easeInCubic: function (t) { return t * t * t },\n      // decelerating to zero velocity \n      easeOutCubic: function (t) { return (--t) * t * t + 1 },\n      // acceleration until halfway, then deceleration \n      easeInOutCubic: function (t) { return t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1 },\n      // accelerating from zero velocity \n      easeInQuart: function (t) { return t * t * t * t },\n      // decelerating to zero velocity \n      easeOutQuart: function (t) { return 1 - (--t) * t * t * t },\n      // acceleration until halfway, then deceleration\n      easeInOutQuart: function (t) { return t < .5 ? 8 * t * t * t * t : 1 - 8 * (--t) * t * t * t },\n      // accelerating from zero velocity\n      easeInQuint: function (t) { return t * t * t * t * t },\n      // decelerating to zero velocity\n      easeOutQuint: function (t) { return 1 + (--t) * t * t * t * t },\n      // acceleration until halfway, then deceleration \n      easeInOutQuint: function (t) { return t < .5 ? 16 * t * t * t * t * t : 1 + 16 * (--t) * t * t * t * t }\n    }\n  }\n\n  static elasticEasingFunctions() {\n    return {\n      // elastic bounce effect at the beginning\n      easeInElastic: function (t) { return (.04 - .04 / t) * Math.sin(25 * t) + 1 },\n      // elastic bounce effect at the end\n      easeOutElastic: function (t) { return .04 * t / (--t) * Math.sin(25 * t) },\n      // elastic bounce effect at the beginning and end\n      easeInOutElastic: function (t) { return (t -= .5) < 0 ? (.02 + .01 / t) * Math.sin(50 * t) : (.02 - .01 / t) * Math.sin(50 * t) + 1 }\n    }\n  }\n}\n","export default class Canvas {\n  constructor(config = {}) {\n    this.width = config.width || 600\n    this.height = config.height || 600\n    this.bgColor = config.bgColor || '#000'\n    this.fps = config.fps || 60\n    this.hook = config.hook\n\n    this.appendToBody()\n\n    this.canvas = document.querySelector('canvas')\n    this.ctx = this.canvas.getContext(\"2d\")\n    this.canvasPosition = this.canvas.getBoundingClientRect()\n    this.stop = false\n  }\n\n  appendToBody() {\n    const c = document.createElement('canvas')\n    let appendElement = document.body\n    c.width = this.width\n    c.height = this.height\n    c.style.background = this.bgColor\n\n    if(this.hook) {\n      appendElement = document.querySelector(this.hook)\n    }\n\n    appendElement.append(c)\n  }\n\n  startAnimation(stop = false) {\n    this.stop = stop\n  }\n\n  stopAnimation(stop = true) {\n    this.stop = stop\n  }\n\n  rect({ x, y, width, height, color, strokeWidth, strokeColor, shadow, rotate }) {\n    this.ctx.fillStyle = color;\n\n    if (strokeWidth) {\n      this.ctx.strokeWidth = strokeWidth\n      this.ctx.strokeStyle = strokeColor;\n    }\n\n    if (shadow) {\n      this.addShadow(shadow)\n    }\n\n    if (rotate) {\n      this.ctx.translate(x + width / 2, y + height / 2);\n      this.ctx.rotate(rotate);\n      this.ctx.fillRect(-width / 2, -height / 2, width, height);\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n      return\n    }\n\n    this.ctx.fillRect(x, y, width, height);\n  }\n\n  line({ x1, y1, x2, y2, lineWidth = 1, shadow, color = '#fff' }) {\n    this.ctx.beginPath();\n\n    if (shadow) {\n      this.addShadow(shadow)\n    }\n\n    this.ctx.moveTo(x1, y1);\n    this.ctx.lineTo(x2, y2);\n    this.ctx.lineWidth = lineWidth;\n    this.ctx.strokeStyle = color;\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  arc({ x, y, r, color, strokeWidth, strokeColor }) {\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, r, 0, Math.PI * 2, true);\n\n    if (strokeWidth) {\n      this.ctx.stroekeWidth = strokeWidth\n      this.ctx.strokeStyle = strokeColor\n      this.ctx.stroke();\n    }\n\n    if (color) {\n      this.ctx.fillStyle = color;\n      this.ctx.fill();\n    }\n  }\n\n  addShadow({ offsetX = 2, offsetY = 2, blur = 2, color = 'rgba(0, 0, 0, 0.5)' }) {\n    this.ctx.shadowOffsetX = offsetX;\n    this.ctx.shadowOffsetY = offsetY;\n    this.ctx.shadowBlur = blur;\n    this.ctx.shadowColor = color;\n  }\n\n  text({ x, y, fontSize = 12, font = 'serif', color = '#fff', text, center }) {\n    const sizeFactor = fontSize >= 50 ? 1.2 : 0.8 // Todo: refine\n    const textLength = center ? (this.ctx.measureText(text).width / 2) * sizeFactor : 0;\n    this.ctx.font = `${fontSize}px ${font}`;\n    this.ctx.fillStyle = color;\n    this.ctx.fillText(text, x - textLength, y);\n  }\n\n  init(time = 0) {\n    this.time = time\n\n    if (!this.stop) {\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      this.render(time)\n\n      setTimeout(() => {\n        window.requestAnimationFrame(this.init.bind(this));\n      }, 1000 / this.fps);\n    }\n  }\n\n  render(time) {\n    // extend Canvas and overwrite\n  }\n}\n\n\n// img.setAttribute('width', '100%');\n// img.setAttribute('height', '100%');","import Calc from './Calc'\nimport Canvas from './Canvas'\nimport Vector from './Vector'\n\nexport {\n  Calc,\n  Canvas,\n  Vector\n}","export class Bullet {\n  constructor(ms, pos, r) {\n    this.ms = ms\n    this.r = r\n    this.x = pos.x\n    this.y = pos.y\n    this.velocity = 10\n  }\n\n  destroy() {\n    this.ms.bullets.splice(this, 1)\n  }\n\n  render() {\n    const { ms, x, y, r } = this\n    ms.arc({ x, y, r, color: 'red' })\n    this.x -= this.velocity\n  }\n}\n","import { Bullet } from '../classes/Bullet'\n\nexport class Tank {\n  constructor(ms, x, y, width, height) {\n    this.ms = ms\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n    this.turret = {\n      x: this.x - 30,\n      y: this.y + this.height / 2 - 10,\n      width: 30,\n      height: 20\n    }\n    this.velocity = 10\n    this.isMoving = false\n    this.dir = 1\n\n  }\n\n  shoot() {\n    const { ms, x, y } = this.turret\n    const r = 10\n    const bullet = new Bullet(this.ms, { x, y: y + r }, r)\n    this.ms.bullets.push(bullet)\n    this.ms.barrelDebree(x, y + r)\n  }\n\n  render() {\n    const { ms, x, y, width, height, isMoving, dir, velocity } = this\n\n    if (isMoving) {\n      if (dir === 1 && y > 0) {\n        this.y -= velocity\n        this.turret.y -= velocity\n      } else if (dir === 0 && y + height < ms.canvas.height) {\n        this.y += velocity\n        this.turret.y += velocity\n      }\n    }\n\n    ms.rect({ x, y, width, height, color: '#fff' })\n    ms.rect({ x: this.turret.x, y: this.turret.y, width: this.turret.width, height: this.turret.height, color: '#fff' })\n  }\n}\n","import { Calc } from '../../src'\n\nexport class Circle {\n  constructor(morningstar, pos, r, vel, acc, angle, color) {\n    this.ctx = morningstar.ctx\n    this.ms = morningstar\n    this.x = pos.x\n    this.y = pos.y\n    this.velocity = vel\n    this.acceleration = acc\n    this.r = r\n    this.angle = angle\n    this.color = color\n  }\n\n  reflectionAngleLeftRight(angle) {\n    return Math.PI - angle\n  }\n\n  reflectionAngleTopBottom(angle) {\n    return -angle\n  }\n\n  collision(objects) {\n    for (const object of objects) {\n      if (object === this) break\n      if (this.movingCircleCollision(this, object)) {\n        return object\n      }\n    }\n\n    return false\n  }\n\n  circleCollisionPoint(x1, y1, r1, x2, y2, r2) {\n    const collisionPointX = ((x1 * r2) + (x2 * r1)) / (r1 + r2);\n    const collisionPointY = ((y1 * r2) + (y2 * r1)) / (r1 + r2);\n\n    return [collisionPointX, collisionPointY]\n  }\n\n  movingCircleCollision(c1, c2) {\n    let combinedRadii,\n      overlap,\n      xSide,\n      ySide,\n      s = {},\n      p1A = {},\n      p1B = {},\n      p2A = {},\n      p2B = {};\n\n    c1.mass = c1.mass || 1;\n    c2.mass = c2.mass || 1;\n    c1.vx = c1.x + Math.cos(c1.angle) * c1.velocity\n    c1.vy = c1.y + Math.sin(c1.angle) * c1.velocity\n    c2.vx = c2.x + Math.cos(c2.angle) * c2.velocity\n    c2.vy = c2.y + Math.sin(c2.angle) * c2.velocity\n\n    s.vx = c2.x - c1.x;\n    s.vy = c2.y - c1.y;\n\n    s.magnitude = Math.sqrt(s.vx * s.vx + s.vy * s.vy);\n    combinedRadii = c1.r + c2.r;\n\n    if (s.magnitude < combinedRadii) {\n      overlap = combinedRadii - s.magnitude;\n      overlap += 0.3;\n\n      // Normalize vector\n      s.dx = s.vx / s.magnitude;\n      s.dy = s.vy / s.magnitude;\n\n      s.vxHalf = Math.abs(s.dx * overlap / 2);\n      s.vyHalf = Math.abs(s.dy * overlap / 2);\n\n      c1.x > c2.x ? (xSide = 1) : (xSide = -1);\n      c1.y > c2.y ? (ySide = 1) : (ySide = -1);\n\n      c1.x = c1.x + s.vxHalf * xSide;\n      c1.y = c1.y + s.vyHalf * ySide;\n\n      c2.x = c2.x + s.vxHalf * -xSide;\n      c2.y = c2.y + s.vyHalf * -ySide;\n\n      s.lx = s.vy;\n      s.ly = -s.vx;\n\n      let dp1 = c1.vx * s.dx + c1.vy * s.dy;\n      p1A.x = dp1 * s.dx;\n      p1A.y = dp1 * s.dy;\n\n      let dp2 = c1.vx * (s.lx / s.magnitude) + c1.vy * (s.ly / s.magnitude);\n      p1B.x = dp2 * (s.lx / s.magnitude);\n      p1B.y = dp2 * (s.ly / s.magnitude);\n\n      let dp3 = c2.vx * s.dx + c2.vy * s.dy;\n      p2A.x = dp3 * s.dx;\n      p2A.y = dp3 * s.dy;\n\n      let dp4 = c2.vx * (s.lx / s.magnitude) + c2.vy * (s.ly / s.magnitude);\n      p2B.x = dp4 * (s.lx / s.magnitude);\n      p2B.y = dp4 * (s.ly / s.magnitude);\n\n      c1.bounce = {};\n      c1.bounce.x = p1B.x + p2A.x;\n      c1.bounce.y = p1B.y + p2A.y;\n\n      c2.bounce = {};\n      c2.bounce.x = p1A.x + p2B.x;\n      c2.bounce.y = p1A.y + p2B.y;\n\n      const vx = c1.bounce.x / c1.mass;\n      const vy = c1.bounce.y / c1.mass;\n      const vx2 = c2.bounce.x / c2.mass;\n      const vy2 = c2.bounce.y / c2.mass;\n      const deltaX = vx - c1.x;\n      const deltaY = vy - c1.y;\n      const deltaX2 = vx2 - c2.x;\n      const deltaY2 = vy2 - c2.y;\n      c2.angle = Math.atan2(deltaY, deltaX);\n      c1.angle = Math.atan2(deltaY2, deltaX2);\n\n      return true;\n    }\n  }\n\n  destroy() {\n    this.ms.circles.splice(this, 1)\n  }\n\n  update(objects) {\n    const { ms, x, y, r, color } = this\n    const collidedCircle = this.collision(objects)\n\n    if (collidedCircle) {\n      const { x: x2, y: y2, r: r2 } = collidedCircle\n      const contactPoint = Calc.createVector((x + x2) * 0.5, (y + y2) * 0.5)\n      const contactAngle = Math.atan2(x2 - contactPoint.x, y2 - contactPoint.y)\n\n      this.angle = Math.sin(contactAngle)\n      collidedCircle.angle = Math.cos(contactAngle)\n\n\n      // EXPLODE\n      const [collisionX, collisionY] = this.circleCollisionPoint(x, y, r, x2, y2, r2)\n      ms.createParticles(collisionX, collisionY, color)\n\n      collidedCircle.destroy()\n      this.r = this.r / 2\n\n      if (this.r < 1) {\n        this.destroy()\n      }\n    }\n  }\n\n  render() {\n    const { x, y, r, velocity, angle } = this\n    this.x = x + Math.cos(angle) * velocity\n    this.y = y + Math.sin(angle) * velocity\n\n    if (this.x > this.ms.canvas.width - r) {\n      this.ms.health -= 1\n      this.velocity = 0\n      this.destroy()\n    }\n\n    if (this.y > this.ms.canvas.height - r) {\n      this.angle = this.reflectionAngleTopBottom(angle)\n    }\n\n    if (this.y < r) {\n      this.angle = this.reflectionAngleTopBottom(angle)\n    }\n\n    this.ms.arc({ x, y, r, color: this.color })\n  }\n}\n","export class Particle {\n  constructor(morningstar, position, velocity, acceleration, angle) {\n    this.ctx = morningstar.ctx\n    this.ms = morningstar\n    this._position = position\n    this.velocity = velocity\n    this.acc = acceleration\n    this.alpha = 1\n    this.angle = angle\n  }\n\n  setColor(color) {\n    return color\n  }\n\n  set position(position) {\n    const { z } = position\n    if (z > 5) {\n      position.z = 3\n    }\n    this._position = position\n  }\n\n  get position() {\n    return this._position\n  }\n}\n\nexport class SquareParticle extends Particle {\n  constructor(morningstar, position, width, height, color, velocity, acceleration, angle) {\n    super(morningstar, position, velocity, acceleration, angle)\n    this.width = width\n    this.height = height\n    this.color = color\n  }\n\n  render() {\n    const { position, width, height, color, alpha, angle, velocity } = this\n    this.ms.rect({ ...position, width, height, color: `rgba(100, 100, 0, ${alpha})` })\n    this.alpha -= 0.01\n\n    this.position.x = this.position.x + Math.cos(angle) * velocity\n    this.position.y = this.position.y + Math.sin(angle) * velocity\n\n    this.velocity += this.acc\n  }\n}\n\nexport class CircleParticle extends Particle {\n  constructor(morningstar, position, r, velocity, acceleration, angle) {\n    super(morningstar, position, velocity, acceleration, angle)\n    this.r = r\n  }\n\n  render(time) {\n    const { position, r, alpha, angle, velocity } = this\n    const radius = Math.sin(time / 200) + r\n\n    this.ms.arc({ ...position, r: radius, color: `rgba(255, 100, 0, ${alpha})` })\n    this.alpha -= 0.01\n\n    this.position.x = this.position.x + Math.cos(angle) * velocity\n    this.position.y = this.position.y + Math.sin(angle) * velocity\n\n    this.velocity += this.acc\n  }\n}","import { Canvas, Calc } from '../src'\nimport { Tank } from './classes/Tank'\nimport { Circle } from './classes/Circle'\nimport { SquareParticle } from './classes/Particle'\n\nclass BallsAndTanks extends Canvas {\n  constructor() {\n    super({ fps: 60, bgColor: 'rgb(50, 50, 50)', width: 800, height: 600, hook: '.main' })\n\n    this.circles = []\n    this.bullets = []\n    this.particles = []\n    this.colors = [\n      'rgb(200, 148, 82)',\n      'rgb(193, 200, 82)',\n      'rgb(134, 200, 82)',\n      'rgb(82, 200, 89)',\n      'rgb(82, 200, 148)',\n      'rgb(82, 193, 200)',\n    ]\n    this.health = 20\n\n    this.tank = new Tank(\n      this,\n      this.canvas.width - 30,\n      this.canvas.height / 2 - 50,\n      50,\n      100\n    )\n\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 38) {\n        this.tank.isMoving = true\n        this.tank.dir = 1\n      }\n\n      if (e.keyCode === 40) {\n        this.tank.isMoving = true\n        this.tank.dir = 0\n      }\n    })\n\n    window.addEventListener('keyup', (e) => {\n      if (e.keyCode === 32) {\n        this.tank.shoot()\n      }\n\n      this.tank.isMoving = false\n\n    }, false)\n\n    setInterval(() => {\n      this.createCircle()\n    }, 1000)\n\n    this.init()\n  }\n\n  bg() {\n    var grd = this.ctx.createLinearGradient(0, this.canvas.height, 0, 0);\n    grd.addColorStop(0, \"#1f3342\");\n    grd.addColorStop(1, \"black\");\n\n    this.ctx.fillStyle = grd;\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  createCircle() {\n    const angle = 0\n    const r = Calc.random(10, 20)\n    const pos = Calc.createVector(-r, Calc.random(r, this.height - r))\n    const velocity = Calc.random(1, 3)\n    const acceleration = Math.random()\n    const color = Calc.random(0, 5)\n    this.circles.push(new Circle(this, pos, r, velocity, acceleration, angle, this.colors[color]))\n  }\n\n  createCircles() {\n    for (let i = 0; i < 3; i++) {\n      this.createCircle()\n    }\n  }\n\n  createParticles(x, y, color = 'red') {\n    for (let i = 0; i < 100; i++) {\n      const angle = Math.random() * Math.PI * 2;\n      const velocity = Math.random()\n      const acceleration = Math.random() / 50\n      const vx = x + Math.cos(angle) * velocity\n      const vy = y + Math.sin(angle) * velocity\n      const r = Calc.random(1, 5)\n\n      this.particles.push(new SquareParticle(this, Calc.create3DVector(vx, vy), r, r, color, velocity, acceleration, angle))\n    }\n  }\n\n  barrelDebree(x, y, color = 'red') {\n    for (let i = 0; i < 100; i++) {\n      const angle = Math.random() * Math.PI;\n      const velocity = Math.random()\n      const acceleration = Math.random() / 50\n      const vx = x + Math.cos(angle) * velocity\n      const vy = y + Math.sin(angle) * velocity\n      const r = Calc.random(1, 5)\n\n      this.particles.push(new SquareParticle(this, Calc.create3DVector(vx, vy), r, r, color, velocity, acceleration, angle))\n    }\n  }\n\n  render() {\n    this.bg()\n\n    for (const bullet of this.bullets) {\n      bullet.render()\n    }\n\n    this.tank.render()\n\n    for (const circle of this.circles) {\n      circle.render()\n    }\n\n    for (const circle of this.circles) {\n      circle.update(this.bullets)\n    }\n\n    for (const particle of this.particles) {\n      if (particle.alpha <= 0) {\n        this.particles.splice(particle, 1)\n        continue\n      }\n\n      particle.render()\n    }\n\n    this.text({\n      x: 17,\n      y: 48,\n      fontSize: 44,\n      text: `Health: ${this.health}`,\n      center: false\n    })\n\n    if (this.health <= 0) {\n      this.text({\n        x: this.canvas.width / 2,\n        y: this.canvas.height / 2,\n        fontSize: 68,\n        text: 'Game Over',\n        center: true\n      })\n\n      this.stopAnimation()\n    }\n  }\n}\n\nnew BallsAndTanks\n"]}